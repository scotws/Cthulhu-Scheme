
; 64tass Turbo Assembler Macro V1.54.1900 listing file
; 64tass --nostart --list=docs/py65mon-listing.txt --labels=docs/py65mon-labelmap.txt --output cthulhu-py65mon.bin platforms/platform-py65mon.asm
; Mon Mar 30 16:40:11 2020

;Offset	;Hex		;Monitor	;Source

;******  Processing input file: platforms/platform-py65mon.asm

=$0000					ram_start = $0000          ; start of installed 32 KiB of RAM
=32767					ram_end   = $8000-1        ; end of installed RAM
=$0000					zpage     = ram_start      ; begin of Zero Page ($0000-$00ff)
=$7f					zpage_end = $7F            ; end of Zero Page used ($0000-$007f)
=$0100					stack0    = $0100          ; begin of Return Stack ($0100-$01ff)

;******  Processing file: platforms/../definitions.asm

=$03					        AscCC   = $03  ; break (CTRL-c)
=$07					        AscBELL = $07  ; bell sound
=$08					        AscBS   = $08  ; backspace
=$0a					        AscLF   = $0a  ; line feed
=$0d					        AscCR   = $0d  ; carriage return
=$1b					        AscESC  = $1b  ; escape
=$20					        AscSP   = $20  ; space
=$7f					        AscDEL  = $7f  ; delete (CTRL-h)
=$10					        AscCP   = $10  ; CTRL-p (used to recall previous input history)
=$0e					        AscCN   = $0e  ; CTRL-n (used to recall next input history)
=0					        output = zpage+0  ; output port (2 bytes)
=2					        input  = zpage+2  ; input port (2 bytes)

;******  Return to file: platforms/platform-py65mon.asm


;******  Processing file: platforms/../cthulhu.asm

.8000					code0:
.8000					cthulhu:
.8000	d8		cld		                cld
.8001	a9 27		lda #$27	                lda #<kernel_putc
.8003	85 00		sta $00		                sta output
.8005	a9 f0		lda #$f0	                lda #>kernel_putc
.8007	85 01		sta $01		                sta output+1
.8009	00		brk #		        brk

;******  Return to file: platforms/platform-py65mon.asm


;******  Processing file: platforms/../helpers.asm

.800a					byte_to_ascii:
.800a	48		pha		                pha
.800b	4a		lsr a		                lsr             ; convert high nibble first
.800c	4a		lsr a		                lsr
.800d	4a		lsr a		                lsr
.800e	4a		lsr a		                lsr
.800f	20 13 80	jsr $8013	                jsr _nibble_to_ascii
.8012	68		pla		                pla
.8013					_nibble_to_ascii:
.8013	29 0f		and #$0f	                and #$0F
.8015	09 30		ora #$30	                ora #'0'
.8017	c9 3a		cmp #$3a	                cmp #$3A        ; '9+1
.8019	90 02		bcc $801d	                bcc +
.801b	69 06		adc #$06	                adc #$06
.801d	4c 27 f0	jmp $f027	+               jmp kernel_putc
.8020	60		rts		                rts

;******  Return to file: platforms/platform-py65mon.asm


;******  Processing file: platforms/../native-procedures.asm

.8021					proc_read_char:
.8021					proc_read_line:

;******  Return to file: platforms/platform-py65mon.asm


;******  Processing file: platforms/../procedures.asm


;******  Return to file: platforms/platform-py65mon.asm


;******  Processing file: platforms/../strings.asm


;******  Return to file: platforms/platform-py65mon.asm

.f010					v_nmi:
.f010					v_reset:
.f010					v_irq:
.f010					kernel_init:
.f010	78		sei		                sei             ; Disable interrupts
.f011	a2 00		ldx #$00	                ldx #0
.f013	bd 2c f0	lda $f02c,x	-               lda s_kernel_id,x
.f016	f0 06		beq $f01e	                beq _done
.f018	20 27 f0	jsr $f027	                jsr kernel_putc
.f01b	e8		inx		                inx
.f01c	80 f5		bra $f013	                bra -
.f01e					_done:
.f01e	4c 00 80	jmp $8000	                jmp cthulhu
.f021					kernel_getc:
.f021					_loop:
.f021	ad 04 f0	lda $f004	                lda $f004
.f024	f0 fb		beq $f021	                beq _loop
.f026	60		rts		                rts
.f027					kernel_putc:
.f027	8d 01 f0	sta $f001	                sta $f001
.f02a	60		rts		                rts
.f02b					platform_bye:
.f02b	00		brk #		                brk
.f02c					s_kernel_id:
>f02c	43 74 68 75 6c 68 75 20		        .text "Cthulhu Scheme default kernel for py65mon (30. Mar 2020)", Asclf, 0
>f034	53 63 68 65 6d 65 20 64 65 66 61 75 6c 74 20 6b
>f044	65 72 6e 65 6c 20 66 6f 72 20 70 79 36 35 6d 6f
>f054	6e 20 28 33 30 2e 20 4d 61 72 20 32 30 32 30 29
>f064	0a 00
>fffa	10 f0				.word v_nmi
>fffc	10 f0				.word v_reset
>fffe	10 f0				.word v_irq

;******  End of listing
